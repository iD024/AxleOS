version: '3.8'

services:
  # --- INFRASTRUCTURE SERVICES ---
  db:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d db"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=mrid_admin
      - MINIO_ROOT_PASSWORD=mrid_admin12345
    ports:
      - "9000:9000"  # API port
      - "9001:9001"  # Console UI port
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 2s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"    # AMQP protocol port
      - "15672:15672"  # Management UI port

  seeder:
    # This service runs once to populate the DB, then exits.
    build:
      context: ../
      dockerfile: ./scripts/Dockerfile.seeder
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    depends_on:
      db:
        condition: service_healthy

  # --- APPLICATION SERVICES ---
  simulator:
    build:
      context: ../backend/services/simulation_orchestrator
    image: simulator:latest
    ports:
      - "8000:8000"

    volumes:
      # Mount the Docker socket to allow this container to control Docker
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount the code for live-reloading during development
      - ../backend/services/simulation_orchestrator/app:/app/app
    environment:
      - DATABASE_URL=postgresql://user:password@db:5432/db
      - DOCKER_HOST=unix:///var/run/docker.sock
      - BEAMNG_HOST_PATH=/home/laksh/Documents/projects/Automotive-Hackathon/AxleOS/simulator/BeamNG.tech.v0.37.6.0
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
  mock_telematics_api:
    build:
      context: ../backend/services/mock_telematics_api
    ports:
      - "8001:8001"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=db
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  minio_data: